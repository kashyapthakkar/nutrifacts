{"version":3,"sources":["components/Loading/Loading.module.css","components/DishInfo/DishInfo.module.css","components/SearchBar/SearchBar.module.css","components/Recipes/Recipes.module.css","App.module.css","components/Intro/Intro.module.css","images/logo.png","components/SearchBar/SearchBar.jsx","components/Recipes/Recipes.jsx","components/DishInfo/DishInfo.jsx","components/Loading/Loading.jsx","components/Intro/Intro.jsx","api/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SearchBar","handleFoodChange","className","styles","container","TextField","fullWidth","label","variant","type","input","id","Button","color","button","onClick","e","document","getElementById","value","Recipes","showDishInfo","searchedData","Grid","spacing","justify","map","item","i","component","Card","xs","md","card","key","recipe","thumbnail","image","title","author","Math","round","calories","ingredients","length","tags","healthLabels","slice","DishInfo","dish","intro","sm","description","root","List","aria-labelledby","subheader","ListSubheader","subheader2","ListItem","lists","ListItemText","primary","text","subheader3","digest","total","unit","href","url","target","Loading","bar1","bar2","bar3","bar4","bar5","bar6","bar7","bar8","bar9","bar10","progressContainer","progress","Intro","fetchData","search_string","a","axios","get","response","data","hits","App","state","toggleRecipes","toggleDishInfo","loading","food","setState","setTimeout","window","location","reload","dishData","src","Image","alt","this","React","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0e91f50c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loading_container__21xZy\",\"bar1\":\"Loading_bar1__b3ObC\",\"bar2\":\"Loading_bar2__3enN9\",\"bar3\":\"Loading_bar3__3IjDy\",\"bar4\":\"Loading_bar4__2xaMu\",\"bar5\":\"Loading_bar5__1BxDU\",\"bar6\":\"Loading_bar6__Peilj\",\"bar7\":\"Loading_bar7__3FO9L\",\"bar8\":\"Loading_bar8__1SGkf\",\"bar9\":\"Loading_bar9__3SXV2\",\"bar10\":\"Loading_bar10__vAfba\",\"progress\":\"Loading_progress__3Hafb\",\"Progress\":\"Loading_Progress__f3F5y\",\"Bar\":\"Loading_Bar__2fWB5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"intro\":\"DishInfo_intro__2vk5r\",\"button\":\"DishInfo_button__1R6Z9\",\"subheader\":\"DishInfo_subheader__14KkC\",\"subheader2\":\"DishInfo_subheader2__3gXXk\",\"subheader3\":\"DishInfo_subheader3__3EsKV\",\"root\":\"DishInfo_root__PTRFQ\",\"lists\":\"DishInfo_lists__1lkzI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchBar_container__1ly9S\",\"button\":\"SearchBar_button__pPsD_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Recipes_card__2pexa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3ZDxI\",\"image\":\"App_image__Q56gg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lists\":\"Intro_lists__UOulH\"};","module.exports = __webpack_public_path__ + \"static/media/logo.09701bd3.png\";","import React from 'react';\r\nimport styles from './SearchBar.module.css'\r\nimport {TextField , Button} from '@material-ui/core';\r\n\r\nconst  SearchBar = ({ handleFoodChange }) =>{\r\n    return(\r\n        <div className={styles.container}>\r\n            <TextField  fullWidth={true} label=\"Search for Food...\" variant=\"outlined\" type=\"text\" className={styles.input} id=\"searchFood\" />\r\n            <Button  variant=\"contained\" color=\"secondary\" className={styles.button} onClick={(e) => handleFoodChange(document.getElementById(\"searchFood\").value)}>Search Food</Button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport styles from \"./Recipes.module.css\";\r\nimport {Card, Grid} from '@material-ui/core';\r\nimport {NewsHeaderCard} from \"react-ui-cards\";\r\n\r\nconst  Recipes = ({ showDishInfo, searchedData }) =>{\r\n\r\n    \r\n\r\n   if(!searchedData[0]){\r\n       return \"\";\r\n   }\r\n    return(\r\n        <div className={styles.container}>\r\n             <Grid container spacing={4} justify=\"center\">\r\n             {searchedData.map((item, i) => \r\n         \r\n                <Grid item component={Card} xs={12} md={4} className={styles.card} key={i}>\r\n                    <div onClick={(e) => showDishInfo(item.recipe)}>\r\n                        <NewsHeaderCard\r\n                            thumbnail={item.recipe.image}\r\n                            title={item.recipe.label}\r\n                            author={Math.round(item.recipe.calories) + \" CALORIES | \" + item.recipe.ingredients.length + \" INGREDIENTS\"}\r\n                            tags={item.recipe.healthLabels.slice(0, 2)}\r\n                        />\r\n                    </div>\r\n                    \r\n                   \r\n                </Grid>\r\n            )}\r\n                \r\n             </Grid>\r\n             \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipes;","import React from 'react';\r\nimport styles from \"./DishInfo.module.css\";\r\nimport {Grid, Button, List, ListSubheader, ListItem, ListItemText} from '@material-ui/core';\r\nimport {TaggedContentCard} from \"react-ui-cards\";\r\n\r\n\r\n\r\nconst  DishInfo = (dish) =>{\r\n \r\n   \r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            <div className={styles.intro}>\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <TaggedContentCard\r\n                            thumbnail= {dish.dish.image}\r\n                            title={dish.dish.label}\r\n                            description={Math.round(dish.dish.calories) + \" CALORIES | \" + dish.dish.ingredients.length + \" INGREDIENTS\"}\r\n                            tags={[]}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6} className={styles.root}>\r\n                    <List\r\n                        component=\"nav\"\r\n                        aria-labelledby=\"nested-list-subheader\"\r\n                        subheader={\r\n                            <ListSubheader component=\"div\" id=\"nested-list-subheader\" className={styles.subheader2}>\r\n                            Health Labels\r\n                            </ListSubheader>\r\n                        }\r\n                       \r\n                        >\r\n                        {dish.dish.healthLabels.map((item, i) =>\r\n                            <ListItem button key={i}  className={styles.lists}>\r\n                                <ListItemText primary={item} />\r\n                            </ListItem>    \r\n                        )}\r\n                        \r\n                            \r\n                    </List>\r\n                   \r\n                </Grid>\r\n                </Grid>    \r\n            </div>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={12} md={5} className={styles.root}>\r\n                    \r\n                    \r\n                    <List\r\n                        component=\"nav\"\r\n                        aria-labelledby=\"nested-list-subheader\"\r\n                        subheader={\r\n                            <ListSubheader component=\"div\" id=\"nested-list-subheader\" className={styles.subheader}>\r\n                            Ingredients\r\n                            </ListSubheader>\r\n                        }\r\n                        \r\n                        >\r\n                        {dish.dish.ingredients.map((item, i) =>\r\n                            <ListItem button key={i} className={styles.lists}>\r\n                                <ListItemText primary={item.text} />\r\n                            </ListItem>    \r\n                        )}\r\n                        \r\n                        \r\n                    </List>\r\n                </Grid>\r\n                \r\n                <Grid item xs={12}  md={5} className={styles.root}>\r\n                    <List\r\n                        component=\"nav\"\r\n                        aria-labelledby=\"nested-list-subheader\"\r\n                        subheader={\r\n                            <ListSubheader component=\"div\" id=\"nested-list-subheader\" className={styles.subheader3}>\r\n                            Nutrition\r\n                            </ListSubheader>\r\n                        }\r\n                        \r\n                        >\r\n                        {dish.dish.digest.map((item, i) =>\r\n                            <ListItem button key={i} className={styles.lists}>\r\n                                <ListItemText primary={item.label}/>\r\n                                <ListItemText primary={Math.round(item.total) + item.unit} />\r\n                            </ListItem>    \r\n                        )}\r\n                        \r\n                            \r\n                    </List>\r\n                    \r\n                </Grid>\r\n            </Grid>\r\n            <a href={dish.dish.url} target=\"blank\"><Button  variant=\"contained\" color=\"secondary\" className={styles.button}>Learn How to Make this dish and more</Button></a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DishInfo;","import React from 'react';\r\nimport styles from './Loading.module.css'\r\n\r\nconst  Loading = () =>{\r\n    return(\r\n        <div>\r\n             <h3>Retriving Data...(this could take a minute.)</h3>\r\n            <div className={styles.container}>\r\n                <div className={styles.bar1}></div>\r\n                <div className={styles.bar2}></div>\r\n                <div className={styles.bar3}></div>\r\n                <div className={styles.bar4}></div>\r\n                <div className={styles.bar5}></div>\r\n                <div className={styles.bar6}></div>\r\n                <div className={styles.bar7}></div>\r\n                <div className={styles.bar8}></div>\r\n                <div className={styles.bar9}></div>\r\n                <div className={styles.bar10}></div>\r\n\r\n                <div className={styles.progressContainer}>\r\n                    <div className={styles.progress}></div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport styles from './Intro.module.css'\r\nimport {List, ListItem, ListItemText} from '@material-ui/core';\r\n\r\nconst  Intro = () =>{\r\n    return(\r\n        <div>\r\n             <List\r\n                component=\"nav\"\r\n                aria-labelledby=\"nested-list-subheader\"\r\n            >\r\n               \r\n                <ListItem button>\r\n                    <ListItemText className={styles.lists} primary=\"Search over 2 million recipes by diets, calories and nutrient ranges\" />\r\n                </ListItem>\r\n\r\n            \r\n            </List>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Intro;","import axios from 'axios';\r\n\r\nconst APP_ID = \"d57c60e9\";\r\nconst APP_KEY = \"04723ebf8cb2099e90bcee4dfb397504\";\r\n\r\n\r\nexport const fetchData = async(search_string) => {\r\n\r\n    \r\n    try {\r\n        const response = await axios.get(`https://api.edamam.com/search?q=${search_string}&app_id=${APP_ID}&app_key=${APP_KEY}`);\r\n        return response.data.hits;\r\n    } catch (error) {\r\n        \r\n        return 0;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SearchBar from './components/SearchBar/SearchBar';\r\nimport Recipes from './components/Recipes/Recipes';\r\nimport DishInfo from './components/DishInfo/DishInfo';\r\nimport Loading from './components/Loading/Loading';\r\nimport Intro from './components/Intro/Intro';\r\nimport { fetchData } from './api';\r\nimport styles from \"./App.module.css\";\r\nimport Image from './images/logo.png';\r\nclass App extends React.Component{\r\n    state = {\r\n        data: {},\r\n        dish: {},\r\n        toggleRecipes: true,\r\n        toggleDishInfo: false,\r\n        loading: false\r\n    }\r\n   \r\n    handleFoodChange = async (food) => {\r\n        \r\n        var data = await fetchData(food);\r\n        if(data === 0){\r\n            this.setState({loading: true});\r\n            setTimeout(async function(){\r\n                window.location.reload();\r\n            }, 100000);\r\n        }else{\r\n            this.setState({data: data, dish: {}, toggleDishInfo: false, toggleRecipes: true, loading: false});\r\n        }\r\n        \r\n    }\r\n    showDishInfo = (dishData) => {\r\n        this.setState({dish: dishData, toggleDishInfo: true, toggleRecipes: false});\r\n        \r\n    }\r\n    render(){\r\n        return(\r\n            <div className={styles.container}>\r\n               <img src={Image} className={styles.image} alt=\"logo\"/>\r\n               {this.state.loading? \"\": <SearchBar handleFoodChange={this.handleFoodChange}/>}\r\n               {this.state.data.length?\"\":<Intro />}\r\n               {this.state.loading? \"\": \r\n                <div>\r\n                    {this.state.toggleRecipes? <Recipes showDishInfo={this.showDishInfo} searchedData={this.state.data}/>: \"\"}\r\n                    {this.state.toggleDishInfo? <DishInfo dish={this.state.dish}/>: \"\"}\r\n                </div>\r\n               }\r\n               {this.state.loading? <Loading />: \"\"}\r\n               \r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}